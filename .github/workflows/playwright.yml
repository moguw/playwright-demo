name: Playwright UI Tests
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'choose one of environments to test'
        required: true
        default: 'staging-app'
        type: choice
        options:
        - staging-app
        - staging-delta
        - staging-gamma
        - staging-beta
jobs:
  test:
    name: Run end-to-end tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Install dotenv 
      run: npm i -D dotenv
    - name: Install report 
      run: npm install playwright-json-summary-reporter --save-dev
    - name: Run Playwright tests
      run: test_env=${{ inputs.environment }} 
            org_owner_pwd=${{ secrets.org_owner_pwd }} 
            group_owner_pwd=${{ secrets.group_owner_pwd }} 
            brand_owner_pwd=${{ secrets.brand_owner_pwd }} 
            operator_pwd=${{ secrets.operator_pwd }} 
            npx playwright test
    - name: Read Summary Report to Get Test Results
      if: always()
      run: |
        STATUS=$(cat ./summary.json | jq -r '.status')
        echo "STATUS=$STATUS" >> $GITHUB_ENV 
        PASSED=$(cat ./summary.json | jq -r '.passed[]' | tr '\n' ' ')
        echo "PASSED=$PASSED" >> $GITHUB_ENV 
        FLAKEY=$(cat ./summary.json | jq -r '.flakey[]' | tr '\n' ' ')
        echo "FLAKEY=$FLAKEY" >> $GITHUB_ENV 
        FAILURES=$(cat ./summary.json | jq -r '.failed[]' | tr '\n' ' ')
        echo "FAILURES=$FAILURES" >> $GITHUB_ENV
    - name: Send Slack Notification
      if: always()
      uses: 8398a7/action-slack@v3
      env:
        FAILURES: ${{ env.FAILURES }}
        PASSED: ${{ env.PASSED }}
        FLAKEY: ${{ env.FLAKEY }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        job_name: Run end-to-end tests
        status: custom
        fields: repo,eventName,workflow,job,took
        custom_payload: |
            {
              attachments: [{
                color: '${{ job.status && needs.*.Results  }}' === 'success' ? 'good' : 'danger',
                title: `Playwright UI Automation Test Results üé≠`,
                fields: [{
                  title: 'üì¶Environment:',
                  value: '${{ inputs.environment }}',
                  short: true
                },
                {
                  title: 'üé®Triggered By:',
                  value: [{'origin': 'pull_request', 'new': 'Pull Request'}, {'origin': 'schedule', 'new': 'Schedule'}, {'origin': 'repository_dispatch', 'new': 'Deploy'}, {'origin': 'workflow_dispatch', 'new': 'GitHub Actions'}].find(item => item.origin === `${process.env.AS_EVENT_NAME}`).new || `${process.env.AS_EVENT_NAME}`,
                  short: true
                },
                {
                  title: '‚è∞Execution Time:',
                  value: `${process.env.AS_TOOK}`,
                  short: true
                },
                {
                  title: 'üêõWorkflow:',
                  value: `${process.env.AS_WORKFLOW}`,
                  short: true
                },
                {
                  title: 'Total Tests:', 
                  value: (`${{ env.FAILURES }}`.match(/.spec.ts/g) || []).length + (`${{ env.PASSED }}`.match(/.spec.ts/g) || []).length,
                  short: true
                },
                {
                  title: '‚úÖPassed| ‚ùåfailed| üî•flaky| Tests:',
                  value: [{(`${{ env.PASSED }}`.match(/.spec.ts/g) || []).length}, {(`${{ env.FAILURES }}`.match(/.spec.ts/g) || []).length}, {(`${{ env.FLAKEY }}`.match(/.spec.ts/g) || []).length}],
                  short: true
                }],
                actions: [{
                    name: "report",
                    text: "View Report",
                    type: "button",
                    value: `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`
                }]
              }]
            }     
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 7